{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)e17147e2-6e2f-4b0d-953f-1725650f4f73","ParentGuid":"(Guid)1cf3a13d-7f1a-47d5-a74e-cbf25906002c","Name":"(string)Rotate","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// We need to check if our pointer is valid AND if what it points to is a valid handle\nIF hActiveFile <> CAA.gc_hINVALID THEN\n\tCASE mxClose OF\n\t\t0: // Flush\n\t\t\tflush(xExecute:=TRUE, hFile:=hActiveFile);\n\t\t\tIF flush.xDone OR flush.xError THEN\n\t\t\t\tflush(xExecute:=FALSE);\n\t\t\t\tmxClose := 10;\n\t\t\tEND_IF\n\t\t10: // Close\n\t\t\tclose(xExecute:=TRUE, hFile:=THIS^.hActiveFile);\n\t\t\tIF close.xDone OR close.xError THEN\n\t\t\t\tTHIS^.hActiveFile := CAA.gc_hINVALID;\n\t\t\t\tclose(xExecute:=FALSE);\n\t\t\t\tmxClose := 0;\n\t\t\tEND_IF\n\tEND_CASE\nELSE\n\tCASE mxRot OF\n\t\t0: // Rename\n\t\t\tmv(xExecute:=TRUE, sFileNameOld:=source, sFileNameNew:=dest);\n\t\t\tIF mv.xDone OR mv.xError THEN\n\t\t\t\tmv(xExecute:=FALSE);\n\t\t\t\tmxRot := 10;\n\t\t\tEND_IF\n\t\t10: // Open\n\t\t\topen(xExecute:=TRUE, sFileName:=source, eFileMode:=FILE.MODE.MWRITE);\n\t\t\tIF open.xDone OR open.xError THEN\n\t\t\t\tIF open.xDone THEN\n\t\t\t\t\tTHIS^.hActiveFile := open.hFile;\n\t\t\t\t\tszFilesize := 0;\n\t\t\t\t\tmxRot := 0;\n\t\t\t\t\tRotate := TRUE;\n\t\t\t\tEND_IF\n\t\t\t\topen(xExecute:=FALSE);\n\t\t\tEND_IF\n\tEND_CASE\n\t\nEND_IF\n\n","LineInfoPersistence":"(string)e17147e2-6e2f-4b0d-953f-1725650f4f73_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)(* When rotating, rotate the current log.\n \n This should manage the file handle for the current log file. (ie. close it and reopen)*)\nMETHOD PROTECTED Rotate : BOOL\nVAR_INPUT\n\t(* The source filename. This is normally the base filename, eg ``test.log``*)\n\tsource\t: STRING(255);\n\t(* The destination filename. This is normally what the source is rotated to, eg ``test.log.1``*)\n\tdest\t: STRING(255);\nEND_VAR\nVAR_INST\n\tmv : FILE.Rename;\n\tflush : FILE.Flush;\n\tclose : FILE.Close;\n\topen : FILE.Open;\n\tmxRot : UINT;\n\tmxClose : UINT;\nEND_VAR","LineInfoPersistence":"(string)e17147e2-6e2f-4b0d-953f-1725650f4f73_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}