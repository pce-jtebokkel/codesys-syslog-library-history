{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)3d6b0b8e-46ff-42b8-9814-231c2460dba5","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)Escape_ParamValue","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)a1970cad-fb7e-4f32-9f9c-fd8f237326f9"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)pChar := pValue;\npNext := pChar + 1;\niPos := 1;\npRep2nd := ADR(sReplacement);\n// Position of the character to escape\npRep2nd := pRep2nd + 1;\nWHILE pChar^ <> 0 DO\n\tIF pChar^ = BACKSLASH AND NOT (pNext^ = BACKSLASH OR pNext^ = RBRACKET OR pNext^ = DQ) \n\t\tOR pChar^ = RBRACKET\n\t\tOR pChar^ = DQ\n\tTHEN\n\t\t// Found something to escape\n\t\tEscape_ParamValue := TRUE;\n\t\tpRep2nd^ := pChar^;\n\t\tStu.StrReplaceA(pValue, uiSize, ADR(sReplacement), DINT_TO_INT(Stu.StrLenA(pValue)), 1, 2, iPos);\n\t\t// Advance 2 characters (passed the newly escaped value)\n\t\tpChar := pNext + 1;\n\t\tpNext := pChar + 1;\n\t\tiPos := DWORD_TO_INT(pNext - pValue);\n\t\t\n\tELSE\n\t\t// If we are already escaped we move an additional char (total of 2)\n\t\tIF pChar^ = BACKSLASH AND (pNext^ = BACKSLASH OR pNext^ = RBRACKET OR pNext^ = DQ) THEN\n\t\t\tpChar := pChar + 1;\n\t\t\tpNext := pChar + 1;\n\t\tEND_IF\n\t\t// Advance to next char\n\t\tpChar := pChar + 1;\n\t\tpNext := pChar + 1;\n\t\tiPos := DWORD_TO_INT(pNext - pValue);\n\tEND_IF\n\t\n\t// Prevent buffer over run\n\tIF INT_TO_UINT(iPos) > uiSize THEN\n\t\tRETURN;\n\tEND_IF\n\t\nEND_WHILE","LineInfoPersistence":"(string)3d6b0b8e-46ff-42b8-9814-231c2460dba5_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)/// Escape Parameter Value.\n/// \n/// If the character to escape is the last character in the buffer it will not be escaped as that would result in a buffer over-run \n///\n/// :escape backslash: \\\\ (16#5c)\n/// :escape right bracket: ] (16#5d)\n/// :escape double quote: \" (16#22)\n/// :return: TRUE if any escape attempted\n/// \nFUNCTION Escape_ParamValue : BOOL\nVAR_INPUT\n\t// Pointer Paramater Value buffer\n\tpValue : POINTER TO SyslogItfs.PARAM_VALUE;\n\t// Value Buffer Size\n\tuiSize : UINT;\nEND_VAR\nVAR\n\tpChar : POINTER TO BYTE;\n\tpNext : POINTER TO BYTE;\n\tiPos : INT;\n\tsReplacement : STRING(2) := '\\\\';\n\tpRep2nd : POINTER TO BYTE;\nEND_VAR\nVAR CONSTANT\n\tBACKSLASH : BYTE := 92;\n\tRBRACKET : BYTE := 93;\n\tDQ : BYTE := 34;\nEND_VAR","LineInfoPersistence":"(string)3d6b0b8e-46ff-42b8-9814-231c2460dba5_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)84","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}